<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/app-context.xml</param-value>
	</context-param>

	<filter>
		<filter-name>encoding-filter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding-filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>AuthorizationFilter</filter-name>
		<filter-class>com.portal.job.filter.AuthorizationFilter</filter-class>
		<init-param>
			<param-name>skipAuthentication</param-name>
			<param-value>home|resources|signin|register|error|api|about</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>AuthorizationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>RecruiterAuthorizedURIFilter</filter-name>
		<filter-class>com.portal.job.filter.RecruiterAuthorizedURIFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>RecruiterAuthorizedURIFilter</filter-name>
		<url-pattern>/recruiter/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>JobseekerAuthorizedURIFilter</filter-name>
		<filter-class>com.portal.job.filter.JobseekerAuthorizedURIFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>JobseekerAuthorizedURIFilter</filter-name>
		<url-pattern>/jobseeker/*</url-pattern>
	</filter-mapping>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Web uitils -->
	<servlet>
		<servlet-name>JSCSSMergeServlet</servlet-name>
		<servlet-class>com.googlecode.webutilities.servlets.JSCSSMergeServlet</servlet-class>
		<!-- This init param is optional and default value is minutes for 7 days 
			in future. -->
		<init-param>
			<param-name>expiresMinutes</param-name>
			<param-value>14400</param-value> <!-- 10 days -->
		</init-param>
		<!-- This init param is also optional and default value is 'public'. -->
		<init-param>
			<param-name>cacheControl</param-name>
			<param-value>public</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>JSCSSMergeServlet</servlet-name>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.json</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>

	<!-- Declaration -->
	<filter>
		<filter-name>responseCacheFilter</filter-name>
		<filter-class>com.googlecode.webutilities.filters.ResponseCacheFilter</filter-class>
	</filter>
	<!-- Mapping -->
	<filter-mapping>
		<filter-name>responseCacheFilter</filter-name>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.json</url-pattern>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>
	<!-- Declaration -->
	<filter>
		<filter-name>compressionFilter</filter-name>
		<filter-class>com.googlecode.webutilities.filters.CompressionFilter</filter-class>
		<init-param>
			<param-name>compressionThreshold</param-name>
			<param-value>512</param-value> <!-- anything above 512bytes -->
		</init-param>
		<init-param>
			<param-name>ignoreURLPattern</param-name>
			<param-value>.*\.(png|gif|jpg|tiff|bmp|mpg|jpeg)</param-value>
		</init-param>
	</filter>
	<!-- Mapping -->
	<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Declaration -->
	<filter>
		<filter-name>yuiMinFilter</filter-name>
		<filter-class>com.googlecode.webutilities.filters.YUIMinFilter</filter-class>
	</filter>
	<!-- Mapping -->
	<filter-mapping>
		<filter-name>yuiMinFilter</filter-name>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.json</url-pattern>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<init-param>
			<param-name>throwExceptionIfNoHandlerFound</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/api*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/api/*</url-pattern>
	</filter-mapping>
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
</web-app>