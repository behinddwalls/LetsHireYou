//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.06.23 at 05:06:12 PM IST 
//


package com.portal.job.resumeparsing.xmlparsing.userArea.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CurrentManagementLevelEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CurrentManagementLevelEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="low-or-no-level"/>
 *     &lt;enumeration value="low-level"/>
 *     &lt;enumeration value="mid-level"/>
 *     &lt;enumeration value="somewhat high-level"/>
 *     &lt;enumeration value="high-level"/>
 *     &lt;enumeration value="executive-level"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CurrentManagementLevelEnum")
@XmlEnum
public enum CurrentManagementLevelEnum {

    @XmlEnumValue("low-or-no-level")
    LOW_OR_NO_LEVEL("low-or-no-level"),
    @XmlEnumValue("low-level")
    LOW_LEVEL("low-level"),
    @XmlEnumValue("mid-level")
    MID_LEVEL("mid-level"),
    @XmlEnumValue("somewhat high-level")
    SOMEWHAT_HIGH_LEVEL("somewhat high-level"),
    @XmlEnumValue("high-level")
    HIGH_LEVEL("high-level"),
    @XmlEnumValue("executive-level")
    EXECUTIVE_LEVEL("executive-level");
    private final String value;

    CurrentManagementLevelEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CurrentManagementLevelEnum fromValue(String v) {
        for (CurrentManagementLevelEnum c: CurrentManagementLevelEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
