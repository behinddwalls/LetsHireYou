//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.06.23 at 05:06:12 PM IST 
//


package com.portal.job.resumeparsing.xmlparsing.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for intervalTypes.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="intervalTypes">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="hourly"/>
 *     &lt;enumeration value="daily"/>
 *     &lt;enumeration value="weekly"/>
 *     &lt;enumeration value="monthly"/>
 *     &lt;enumeration value="quarterly"/>
 *     &lt;enumeration value="yearly"/>
 *     &lt;enumeration value="semi-monthly"/>
 *     &lt;enumeration value="biweekly"/>
 *     &lt;enumeration value="fortnightly"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "intervalTypes")
@XmlEnum
public enum IntervalTypes {

    @XmlEnumValue("hourly")
    HOURLY("hourly"),
    @XmlEnumValue("daily")
    DAILY("daily"),
    @XmlEnumValue("weekly")
    WEEKLY("weekly"),
    @XmlEnumValue("monthly")
    MONTHLY("monthly"),
    @XmlEnumValue("quarterly")
    QUARTERLY("quarterly"),
    @XmlEnumValue("yearly")
    YEARLY("yearly"),
    @XmlEnumValue("semi-monthly")
    SEMI_MONTHLY("semi-monthly"),
    @XmlEnumValue("biweekly")
    BIWEEKLY("biweekly"),
    @XmlEnumValue("fortnightly")
    FORTNIGHTLY("fortnightly");
    private final String value;

    IntervalTypes(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IntervalTypes fromValue(String v) {
        for (IntervalTypes c: IntervalTypes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
